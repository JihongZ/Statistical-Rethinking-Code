## load packages
library(rethinking)
1e4
k=1
r <- mcreplicate(1e4, sim.train.test(N=N, k=k))
## True data-generating process
N <- 20
kseq <- 1:5 # number of predictors
r <- mcreplicate(1e4, sim.train.test(N=N, k=k))
str(r)
?sim.train.test
parallel::detectCores()
## load packages
library(rethinking)
options(mc.cores = parallel::detectCores())
## True data-generating process
N <- 20
kseq <- 1:5 # number of parameters
dev <- sapply(kseq, function(k) {
print(k)
r <- mcreplicate(1e4, sim.train.test(N=N, k=k))
c(mean(r[1,]), mean(r[2,]), sd(r[1,]), sd(r[2,]))
})
rangi2
plot(1:5, dev[1,],
ylim=c(min(dev[1:2,])-5, min(dev[1:2,])+10),
xlim=c(1, 5.1),
xlab = "number of parameter",
ylab = "deviance",
pch=16, col=rangi2
)
mtext(concat("N = ", N))
points( (1:5)+0.1, dev[2,])
for (i in kseq) {
pts_in <- dev[1,i] + c(-1, 1)*dev[3,i]
pts_out <- dev[2,i] + c(-1, 1)*dev[4,i]
lines(c(i,i), pts_in, col=rangi2)
lines(c(i,i)+0.1, pts_out)
}
min(dev[1:2,])+10
plot(1:5, dev[1,],
ylim=c(min(dev[1:2,])-5, max(dev[1:2,])+10),
xlim=c(1, 5.1),
xlab = "number of parameter",
ylab = "deviance",
pch=16, col=rangi2
)
mtext(concat("N = ", N))
points( (1:5)+0.1, dev[2,])
for (i in kseq) {
pts_in <- dev[1,i] + c(-1, 1)*dev[3,i]
pts_out <- dev[2,i] + c(-1, 1)*dev[4,i]
lines(c(i,i), pts_in, col=rangi2)
lines(c(i,i)+0.1, pts_out)
}
plot(1:5, dev[1,],
ylim=c(min(dev[1:2,])-5, max(dev[1:2,])+10),
xlim=c(1, 5.1),
xlab = "number of parameter",
ylab = "deviance",
pch=16, col=rangi2
)
mtext(concat("N = ", N))
points( (1:5)+0.1, dev[2,])
for (i in kseq) {
pts_in <- dev[1,i] + c(-1, 1)*dev[3,i]
pts_out <- dev[2,i] + c(-1, 1)*dev[4,i]
lines(c(i,i), pts_in, col=rangi2)
lines(c(i,i)+0.1, pts_out)
}
plot(1:5, dev[1,],
ylim=c(min(dev[1:2,])-5, max(dev[1:2,])+10),
xlim=c(1, 5.1),
xlab = "number of parameter",
ylab = "deviance",
pch=16, col=rangi2
)
mtext(concat("N = ", N))
points( (1:5)+0.1, dev[2,])
lines( (1:5)+0.1, dev[2,])
for (i in kseq) {
pts_in <- dev[1,i] + c(-1, 1)*dev[3,i]
pts_out <- dev[2,i] + c(-1, 1)*dev[4,i]
lines(c(i,i), pts_in, col=rangi2)
lines(c(i,i)+0.1, pts_out)
}
plot(1:5, dev[1,],
ylim=c(min(dev[1:2,])-5, max(dev[1:2,])+10),
xlim=c(1, 5.1),
xlab = "number of parameter",
ylab = "deviance",
pch=16, col=rangi2
)
plot(1:5, dev[1,],
ylim=c(min(dev[1:2,])-5, max(dev[1:2,])+10),
xlim=c(1, 5.1),
xlab = "number of parameter",
ylab = "deviance",
pch=16, col=rangi2
)
mtext(concat("N = ", N))
points( (1:5)+0.1, dev[2,])
lines( (1:5)+0.1, dev[2,])
lines( 1:5, dev[1,], col=rangi2)
for (i in kseq) {
pts_in <- dev[1,i] + c(-1, 1)*dev[3,i]
pts_out <- dev[2,i] + c(-1, 1)*dev[4,i]
lines(c(i,i), pts_in, col=rangi2)
lines(c(i,i)+0.1, pts_out)
}
plot(1:5, dev[1,],
ylim=c(min(dev[1:2,])-5, max(dev[1:2,])+10),
xlim=c(1, 5.1),
xlab = "number of parameter",
ylab = "deviance",
pch=16, col=rangi2
)
mtext(concat("N = ", N))
text(c(1,65), "xx")
points( (1:5)+0.1, dev[2,])
lines( (1:5)+0.1, dev[2,])
lines( 1:5, dev[1,], col=rangi2)
for (i in kseq) {
pts_in <- dev[1,i] + c(-1, 1)*dev[3,i]
pts_out <- dev[2,i] + c(-1, 1)*dev[4,i]
lines(c(i,i), pts_in, col=rangi2)
lines(c(i,i)+0.1, pts_out)
}
plot(1:5, dev[1,],
ylim=c(min(dev[1:2,])-5, max(dev[1:2,])+10),
xlim=c(1, 5.1),
xlab = "number of parameter",
ylab = "deviance",
pch=16, col=rangi2
)
mtext(concat("N = ", N))
text(c(3,65), "xx")
points( (1:5)+0.1, dev[2,])
lines( (1:5)+0.1, dev[2,])
lines( 1:5, dev[1,], col=rangi2)
for (i in kseq) {
pts_in <- dev[1,i] + c(-1, 1)*dev[3,i]
pts_out <- dev[2,i] + c(-1, 1)*dev[4,i]
lines(c(i,i), pts_in, col=rangi2)
lines(c(i,i)+0.1, pts_out)
}
?text
plot(1:5, dev[1,],
ylim=c(min(dev[1:2,])-5, max(dev[1:2,])+10),
xlim=c(1, 5.1),
xlab = "number of parameter",
ylab = "deviance",
pch=16, col=rangi2
)
mtext(concat("N = ", N))
text(x =1, y =65, "xx")
points( (1:5)+0.1, dev[2,])
lines( (1:5)+0.1, dev[2,])
lines( 1:5, dev[1,], col=rangi2)
for (i in kseq) {
pts_in <- dev[1,i] + c(-1, 1)*dev[3,i]
pts_out <- dev[2,i] + c(-1, 1)*dev[4,i]
lines(c(i,i), pts_in, col=rangi2)
lines(c(i,i)+0.1, pts_out)
}
plot(1:5, dev[1,],
ylim=c(min(dev[1:2,])-5, max(dev[1:2,])+10),
xlim=c(1, 5.1),
xlab = "number of parameter",
ylab = "deviance",
pch=16, col=rangi2
)
mtext(concat("N = ", N))
text(x =1, y =65, "training data", col = rangi2)
text(x =1.1, y =65+1, "test data")
points( (1:5)+0.1, dev[2,])
lines( (1:5)+0.1, dev[2,])
lines( 1:5, dev[1,], col=rangi2)
for (i in kseq) {
pts_in <- dev[1,i] + c(-1, 1)*dev[3,i]
pts_out <- dev[2,i] + c(-1, 1)*dev[4,i]
lines(c(i,i), pts_in, col=rangi2)
lines(c(i,i)+0.1, pts_out)
}
plot(1:5, dev[1,],
ylim=c(min(dev[1:2,])-5, max(dev[1:2,])+10),
xlim=c(1, 5.1),
xlab = "number of parameter",
ylab = "deviance",
pch=16, col=rangi2
)
mtext(concat("N = ", N))
text(x =1.3, y =45, "training data", col = rangi2)
text(x =1.1, y =65+1, "test data")
points( (1:5)+0.1, dev[2,])
lines( (1:5)+0.1, dev[2,])
lines( 1:5, dev[1,], col=rangi2)
for (i in kseq) {
pts_in <- dev[1,i] + c(-1, 1)*dev[3,i]
pts_out <- dev[2,i] + c(-1, 1)*dev[4,i]
lines(c(i,i), pts_in, col=rangi2)
lines(c(i,i)+0.1, pts_out)
}
plot(1:5, dev[1,],
ylim=c(min(dev[1:2,])-5, max(dev[1:2,])+10),
xlim=c(1, 5.1),
xlab = "number of parameter",
ylab = "deviance",
pch=16, col=rangi2
)
mtext(concat("N = ", N))
text(x =1.1, y =45, "training data", col = rangi2)
text(x =1.1, y =65+1, "test data")
points( (1:5)+0.1, dev[2,])
lines( (1:5)+0.1, dev[2,])
lines( 1:5, dev[1,], col=rangi2)
for (i in kseq) {
pts_in <- dev[1,i] + c(-1, 1)*dev[3,i]
pts_out <- dev[2,i] + c(-1, 1)*dev[4,i]
lines(c(i,i), pts_in, col=rangi2)
lines(c(i,i)+0.1, pts_out)
}
plot(1:5, dev[1,],
ylim=c(min(dev[1:2,])-5, max(dev[1:2,])+10),
xlim=c(1, 5.1),
xlab = "number of parameter",
ylab = "deviance",
pch=16, col=rangi2
)
mtext(concat("N = ", N))
text(x =1.1, y =50, "training data", col = rangi2)
text(x =1.1, y =65+1, "test data")
points( (1:5)+0.1, dev[2,])
lines( (1:5)+0.1, dev[2,])
lines( 1:5, dev[1,], col=rangi2)
for (i in kseq) {
pts_in <- dev[1,i] + c(-1, 1)*dev[3,i]
pts_out <- dev[2,i] + c(-1, 1)*dev[4,i]
lines(c(i,i), pts_in, col=rangi2)
lines(c(i,i)+0.1, pts_out)
}
